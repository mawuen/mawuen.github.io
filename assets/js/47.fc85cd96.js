(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{495:function(e,t,n){"use strict";n.r(t);var s=n(7),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("J'inaugure ce blog avec un article sur "),n("a",{attrs:{href:"https://pypy.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pypy"),n("OutboundLink")],1),e._v(", une implémentation de\nPython très intéressante du point de vue des performances puisque,\ncomme nous le verrons un peu plus bas, il est possible de rivaliser avec\ndes langages compilés statiquement tels que le C ou le C++. L'article\nse décomposera de la façon suivante :")]),e._v(" "),n("ol",[n("li",[e._v("Qu'est-ce que Python.")]),e._v(" "),n("li",[e._v("Quelles sont les différentes implémentation ?")]),e._v(" "),n("li",[e._v("Qu'est-ce qui caractérise Pypy ?")]),e._v(" "),n("li",[e._v("La compilation JIT (Just-In-Time).")]),e._v(" "),n("li",[e._v("Compiler et utiliser Pypy.")]),e._v(" "),n("li",[e._v("Bref aperçu des performances.")])]),e._v(" "),n("h2",{attrs:{id:"qu-est-ce-que-python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qu-est-ce-que-python"}},[e._v("#")]),e._v(" Qu'est ce que Python")]),e._v(" "),n("p",[e._v("Python est un langage de programmation moderne classé dans la\ncatégorie des langages de scripts (il est interprété, du moins dans\nson implémentation officielle, CPython). Étant très haut niveau, il\npermet aux développeurs de gagner en productivité en leur permettant\nde se détacher au maximum des contraintes bas niveaux que l'on peut\nretrouver sur d'autres langages tels que le C, ce qui en fait un\nlangage adapté pour l'apprentissage de la programmation. En effet,\nil est facile d'accès et rapide à apprendre. Sa syntaxe, basée\nsur l'indentation (pas d'accolades ni de mot-clé pour séparer\nles « blocs » d'instruction) le rend plus lisible que la plupart\ndes langages. Pour terminer, voici quelques spécificités du langage\n: Inférence de type, fonctionnalités objet avancées, type entier de\ntaille arbitraire, compréhension de listes permettant de créer des\nlistes de manière élégante, etc ..")]),e._v(" "),n("h2",{attrs:{id:"quelles-sont-les-differentes-implementations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#quelles-sont-les-differentes-implementations"}},[e._v("#")]),e._v(" Quelles sont les différentes implémentations")]),e._v(" "),n("p",[e._v("Le langage Python étant placé sous licence libre, il en existe de\nnombreuses implémentations ayant chacune leurs spécificités. En voici\nquelques-unes :")]),e._v(" "),n("ol",[n("li",[n("em",[e._v("CPython")]),e._v(" : Implémentation officielle (la plus connue) écrite en C.")]),e._v(" "),n("li",[n("em",[e._v("Pypy")]),e._v(" : Implémentation disposant d'un compilateur JIT (Just-In-Time).")]),e._v(" "),n("li",[n("em",[e._v("ShedSkin")]),e._v(" : Implémentation disposant d'un compilateur\nPython-to-C++ et offrant des performances très intéressantes du point\nde vu du temps d'exécution.")]),e._v(" "),n("li",[n("em",[e._v("Stackless")]),e._v(" : Implémentation qui se passe de la pile d'appels du\nC en la remplaçant par une structure de données propre au Python.\nCette implémentation est grandement basée sur le paradigme de la\nconcurrence, faisant appel à des Tasklets (sorte de micro-threads)\nafin de simuler une exécution parallèle des programmes. Les Tasklets\npeuvent être créées par centaines (voire milliers), communiquer entre\nelles facilement, être mise en pause ou réveillées instantanément,\netc ..")]),e._v(" "),n("li",[n("em",[e._v("Jython")]),e._v(" : Implémentation écrite en Java.")]),e._v(" "),n("li",[n("em",[e._v("Iron Python")]),e._v(" : Implémentation écrite en C#.")])]),e._v(" "),n("h2",{attrs:{id:"qu-est-ce-qui-caracterise-pypy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qu-est-ce-qui-caracterise-pypy"}},[e._v("#")]),e._v(" Qu'est-ce qui caractérise Pypy")]),e._v(" "),n("p",[e._v("Pypy est une implémentation de Python, écrite en Python, et proposant\n(entre autres), un compilateur JIT (cf paragraphe suivant) lui\npermettant de délivrer des performances dignes de la plupart des\nlangages compilés statiquement (C, C++, etc..). Pypy offre également\nune consommation mémoire réduite par rapport à CPython, et supporte\nla plupart des bibliothèques disponibles avec l'implémentation\nofficielle.")]),e._v(" "),n("p",[e._v("Il est également possible de compiler Pypy pour obtenir une version\nSandBox ou Stackless de Python. D'autres langages sont également\nsupportés par Pypy (Javascript, Scheme, etc..) puisque ce dernier\nutilise une chaine de traitement qui peut analyser des programmes\nécrits en RPython (un subset réduit du langage Python), les\ntraduire en code C puis les compiler en code machine, ce qui permet\nà n'importe quel langage d'être utilisé avec Pypy à condition\nqu'ils puissent être traduit en RPython. Pour plus d'informations,\nje vous invite à consulter le site officiel de Pypy dont le lien est\ncommuniqué en fin d'article.")]),e._v(" "),n("h2",{attrs:{id:"la-compilation-jit-just-in-time"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#la-compilation-jit-just-in-time"}},[e._v("#")]),e._v(" La compilation JIT (Just-In-Time)")]),e._v(" "),n("p",[e._v("Le langage Python offrant des outils très haut niveau (tels que des\nfonctionnalités Objet avancées), il est difficile et globalement\ninefficace (comparativement à des langages plus bas niveaux tels que le\nC) de le compiler statiquement, on ne se tournera donc pas vers de la\ncompilation statique si l'on recherche des performances honorables. Il\nexiste heureusement une alternative très performante à la compilation\nstatique, il s'agit de la compilation JIT (Just-In-Time, ou « à la\nvolée »). C'est cette technologie qui est utilisée dans le projet\nPypy, ce qui permet d'offrir au langage Python des performances dignes\nde langages compilés statiquement tels que le C ou le C++. Voyons de\nquoi il s'agit.")]),e._v(" "),n("p",[e._v("La compilation Just-In-Time (ou dynamique) représente une approche\nhybride entre la compilation statique et l'interprétation, elle a\npour but d'obtenir des performance égales, voire supérieures, à la\ncompilation statique classique. Les compilateurs JIT convertissent du\nBytecode en code machine à la volée (au moment de l'exécution).\nMais pour limiter la dégradation des performances, plusieurs techniques\nsont utilisées. Premièrement, il est possible de mettre en cache\ncertaines parties d'un programme afin de ne pas avoir à les\nretraduire inutilement lors d'exécutions ultérieures si leur code\nsource n'a pas été modifié entre temps. Deuxièmement, grâce à\nun système de détection des points chauds (parties d'un programmes\nétant très sollicitées lors de l'exécution), le compilateur peut\ndécider de traduire une partie du programme en code machine si cela\ns'avère plus intéressant qu'une simple interprétation en terme de\ntemps d'exécution.")]),e._v(" "),n("p",[e._v("De plus, de nombreuses optimisations ne sont possibles qu'au moment\nde l'exécution du programme. Un compilateur JIT peut donc utiliser\nles informations du contexte d'exécution afin d'améliorer les\nperformance d'un programme. Notamment, il est possible d'adapter le\ncode machine produit en fonction de l'architecture du processeur ou\nencore d'effectuer de l'inlining de bibliothèques dynamiques, sans\nperdre pour autant les avantages du linkage dynamique.")]),e._v(" "),n("p",[e._v("La compilation JIT est utilisée par la machine virtuelle du Java ou\nencore le C#.")]),e._v(" "),n("h2",{attrs:{id:"compiler-et-utiliser-pypy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#compiler-et-utiliser-pypy"}},[e._v("#")]),e._v(" Compiler et utiliser Pypy")]),e._v(" "),n("p",[e._v("Il existe deux solutions pour utiliser Pypy. Soit votre distribution\nLinux favorite vous le propose directement depuis ses dépôts, auquel\ncas il vous suffit de l'installer, soit vous pouvez télécharger\nles sources depuis le mercurial de Pypy. Attention néanmoins, si\nvous installez Pypy depuis les dépôts de votre distribution, il est\npossible qu'il remplace une version existante de Python sur votre\nordinateur.")]),e._v(" "),n("p",[n("em",[e._v("Building from sources")]),e._v(" : Nous allons voir ici comment télécharger les\nsources de Pypy, les compiler puis utiliser le binaire produit. Avant\ntoute chose, il faut savoir que la compilation de Pypy est extrêmement\ngourmande en ressources (mémoire vive et CPU), si vous n'avez pas\n4 Go de RAM sur votre PC, il faudra passer par les dépôts de votre\ndistribution, sans quoi vous risquez de partir en Swap infini ..")]),e._v(" "),n("p",[n("em",[e._v("Liste des dépendances")]),e._v(" : "),n("a",{attrs:{href:"http://pypy.readthedocs.org/en/latest/getting-started-python.html#translating-the-pypy-python-interpreter",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://pypy.readthedocs.org/en/latest/getting-started-python.html#translating-the-pypy-python-interpreter"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("Une fois toutes les dépendances installées, récupérez les sources de\nPypy en lançant la commande suivant :")]),e._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[e._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("hg")]),e._v(" clone https://bitbucket.org/pypy/pypy\n")])])]),n("p",[e._v("Rendez-vous ensuite dans le répertoire goal :")]),e._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[e._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" pypy/pypy/translator/goal\n")])])]),n("p",[e._v("Lancez enfin le script avec Python (ou avec Pypy lui-même si vous\nl'avez déjà installé, ce qui vous fera économiser du temps et de\nla mémoire) :")]),e._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[e._v("$ python2 translate.py -Ojit\n")])])]),n("p",[e._v("Vous apprécierez au passage les fractales de Mandelbrot qui seront\ndessinées dans votre terminal pendant la compilation.")]),e._v(" "),n("p",[e._v("Une fois le long processus terminé, un binaire nommé pypy-c est\nnormalement présent dans le répertoire. Vous pouvez le renommer et/ou\nle déplacer afin de l'utiliser comme bon vous semble. Il remplace le\nbinaire Python traditionnel, vous pouvez donc l'utiliser de la façon\nsuivante :")]),e._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[e._v("$ ./pypy mon_script.py "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# votre script python")]),e._v("\n")])])]),n("h2",{attrs:{id:"bref-apercu-des-performances"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bref-apercu-des-performances"}},[e._v("#")]),e._v(" Bref aperçu des performances")]),e._v(" "),n("p",[e._v("Pour terminer, voici un bref aperçu des performances de Pypy\ncomparativement à d'autres implémentations/langages disponible sur\nla page Performance officielle du site de Pypy : "),n("a",{attrs:{href:"http://speed.pypy.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://speed.pypy.org/"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"bibliographie"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bibliographie"}},[e._v("#")]),e._v(" Bibliographie")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://pypy.org/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://pypy.org/index.html"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://fr.wikipedia.org/wiki/PyPy",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://fr.wikipedia.org/wiki/PyPy"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://en.wikipedia.org/wiki/PyPy",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://en.wikipedia.org/wiki/PyPy"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://en.wikipedia.org/wiki/Just-in-time_compilation",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://en.wikipedia.org/wiki/Just-in-time_compilation"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://www.python.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.python.org/"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://fr.wikibooks.org/wiki/Python",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://fr.wikibooks.org/wiki/Python"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("Le mot de la fin---Toutes les propositions et remarques sont bien\névidemment les bienvenues 😃")])])}),[],!1,null,null,null);t.default=i.exports}}]);